//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
namespace Ncqrs.EventSourcing.EntityFramework
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class EventStoreContext : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new EventStoreContext object using the connection string found in the 'EventStoreContext' section of the application configuration file.
        /// </summary>
        public EventStoreContext() : base("name=EventStoreContext", "EventStoreContext")
        {
            this.ContextOptions.LazyLoadingEnabled = false;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new EventStoreContext object.
        /// </summary>
        public EventStoreContext(string connectionString) : base(connectionString, "EventStoreContext")
        {
            this.ContextOptions.LazyLoadingEnabled = false;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new EventStoreContext object.
        /// </summary>
        public EventStoreContext(EntityConnection connection) : base(connection, "EventStoreContext")
        {
            this.ContextOptions.LazyLoadingEnabled = false;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        internal ObjectSet<Event> Events
        {
            get
            {
                if ((_Events == null))
                {
                    _Events = base.CreateObjectSet<Event>("Events");
                }
                return _Events;
            }
        }
        private ObjectSet<Event> _Events;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        internal ObjectSet<Snapshot> Snapshots
        {
            get
            {
                if ((_Snapshots == null))
                {
                    _Snapshots = base.CreateObjectSet<Snapshot>("Snapshots");
                }
                return _Snapshots;
            }
        }
        private ObjectSet<Snapshot> _Snapshots;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Events EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        internal void AddToEvents(Event @event)
        {
            base.AddObject("Events", @event);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Snapshots EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        internal void AddToSnapshots(Snapshot snapshot)
        {
            base.AddObject("Snapshots", snapshot);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Event")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    internal partial class Event : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Event object.
        /// </summary>
        /// <param name="data">Initial value of the Data property.</param>
        /// <param name="aggregateId">Initial value of the AggregateId property.</param>
        /// <param name="version">Initial value of the Version property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        public static Event CreateEvent(global::System.Byte[] data, global::System.Guid aggregateId, global::System.Int64 version, global::System.String type)
        {
            Event @event = new Event();
            @event.Data = data;
            @event.AggregateId = aggregateId;
            @event.Version = version;
            @event.Type = type;
            return @event;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] Data
        {
            get
            {
                return StructuralObject.GetValidValue(_Data);
            }
            set
            {
                OnDataChanging(value);
                ReportPropertyChanging("Data");
                _Data = StructuralObject.SetValidValue(value, false, "Data");
                ReportPropertyChanged("Data");
                OnDataChanged();
            }
        }
        private global::System.Byte[] _Data;
        partial void OnDataChanging(global::System.Byte[] value);
        partial void OnDataChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid AggregateId
        {
            get
            {
                return _AggregateId;
            }
            set
            {
                if (_AggregateId != value)
                {
                    OnAggregateIdChanging(value);
                    ReportPropertyChanging("AggregateId");
                    _AggregateId = StructuralObject.SetValidValue(value, "AggregateId");
                    ReportPropertyChanged("AggregateId");
                    OnAggregateIdChanged();
                }
            }
        }
        private global::System.Guid _AggregateId;
        partial void OnAggregateIdChanging(global::System.Guid value);
        partial void OnAggregateIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Version
        {
            get
            {
                return _Version;
            }
            set
            {
                if (_Version != value)
                {
                    OnVersionChanging(value);
                    ReportPropertyChanging("Version");
                    _Version = StructuralObject.SetValidValue(value, "Version");
                    ReportPropertyChanged("Version");
                    OnVersionChanged();
                }
            }
        }
        private global::System.Int64 _Version;
        partial void OnVersionChanging(global::System.Int64 value);
        partial void OnVersionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value, false, "Type");
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Snapshot")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    internal partial class Snapshot : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Snapshot object.
        /// </summary>
        /// <param name="data">Initial value of the Data property.</param>
        /// <param name="aggregateId">Initial value of the AggregateId property.</param>
        /// <param name="version">Initial value of the Version property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        public static Snapshot CreateSnapshot(global::System.Byte[] data, global::System.Guid aggregateId, global::System.Int64 version, global::System.String type)
        {
            Snapshot snapshot = new Snapshot();
            snapshot.Data = data;
            snapshot.AggregateId = aggregateId;
            snapshot.Version = version;
            snapshot.Type = type;
            return snapshot;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] Data
        {
            get
            {
                return StructuralObject.GetValidValue(_Data);
            }
            set
            {
                OnDataChanging(value);
                ReportPropertyChanging("Data");
                _Data = StructuralObject.SetValidValue(value, false, "Data");
                ReportPropertyChanged("Data");
                OnDataChanged();
            }
        }
        private global::System.Byte[] _Data;
        partial void OnDataChanging(global::System.Byte[] value);
        partial void OnDataChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid AggregateId
        {
            get
            {
                return _AggregateId;
            }
            set
            {
                if (_AggregateId != value)
                {
                    OnAggregateIdChanging(value);
                    ReportPropertyChanging("AggregateId");
                    _AggregateId = StructuralObject.SetValidValue(value, "AggregateId");
                    ReportPropertyChanged("AggregateId");
                    OnAggregateIdChanged();
                }
            }
        }
        private global::System.Guid _AggregateId;
        partial void OnAggregateIdChanging(global::System.Guid value);
        partial void OnAggregateIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Version
        {
            get
            {
                return _Version;
            }
            set
            {
                if (_Version != value)
                {
                    OnVersionChanging(value);
                    ReportPropertyChanging("Version");
                    _Version = StructuralObject.SetValidValue(value, "Version");
                    ReportPropertyChanged("Version");
                    OnVersionChanged();
                }
            }
        }
        private global::System.Int64 _Version;
        partial void OnVersionChanging(global::System.Int64 value);
        partial void OnVersionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value, false, "Type");
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();

        #endregion

    }

    #endregion

}
